steps:
# Get the Image repo and tag name (version) from the k8s deploy manifest
# image_name.txt = repo + tag name
# image_repo.txt = repo name only
# image_tag.txt = tag name only
- id: 'Get Version'
  name: 'ubuntu'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    grep -oP "image:\s+\K(.*)" k8s/abagdemo-deploy.yaml > image_name.txt &&
    grep -oP "image:\s+\K(\S+)(?=:)" k8s/abagdemo-deploy.yaml > image_repo.txt &&
    grep -oP "image:\s+\S+:\K(.*)" k8s/abagdemo-deploy.yaml > image_tag.txt

# Update the container image using kubectl set
- id: 'Update Image in k8s'
  name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/${_K8S_DEPLOY}'
  - ${_K8S_CONT}=$(cat image_name.txt)
  - '-n'
  - ${_K8S_NS}
  - '--record'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'

substitutions:
    # Name of our application.
    _APP_NAME: 'abagdemo-gcp'
    # Name of Google Secret that contains the credentials for our app
    # to connect to  Google Storage.
    _GS_CREDS: 'last-baron-abagdemo'
    # Name of the GitHub Repo where our code is.
    _GIT_REPO: github.com/fckuligowski/${_APP_NAME}
    # Name of Google Secrets for GitHub user name and password.
    _GIT_USER: 'fckuligowski-git-user'
    _GIT_PWD: 'fckuligowski-git-pwd'
    # The Git Tag's message field will use this value.
    _GIT_TAG_CMT: 'automatically generated by Google Cloud Build for ${_APP_NAME}'
    # Kubernetes namespace, deployment, and container names.
    _K8S_NS: 'abagdemo'
    _K8S_DEPLOY: '${_K8S_NS}'
    _K8S_CONT: '${_K8S_NS}'
    # Name of our GKE Kubernetes Cluster
    _GKE_CLUSTER: 'jenkins-cd'
    _GKE_ZONE: 'us-east1-d'

options:
    substitution_option: 'ALLOW_LOOSE'